!function(n,e){"use strict";var i=!0,t=navigator.userAgent,o=t.indexOf("Breeze")>=0,c=function(n){i&&console.log(n)},r=function(n,e){this.token=null,this.succCallback=n,this.failCallback=e},a={},l=0,s=function(){return l++,l>=65535&&(l=0),l},f=function(){for(;l in a;)s();return l},u=function(n){var e=f();n.token=e,a[e]=n,c("{msg:'[registerContext]',token:"+e+",context:"+JSON.stringify(n)+"}")},d={},b=function(){};b.prototype={},b.call=function(n,e,i,t,a){if(!o)return void c("not support breeze");var l=new r(t,a);u(l);var s={plugin:n,method:e,params:i,info:JSON.stringify(l)};c(JSON.stringify(s)),window.prompt(JSON.stringify(s),"hybrid://protocol/breeze")},b.callback=function(n,e,i){return o?void(n in a&&(c("{msg:'[callback] find context succssed.', token:"+n+"}"),"successed"==e?(c("{msg:'[callback] execute succssed callback.', token:"+n+"}"),a[n].succCallback(i)):"failed"==e&&(c("{msg:'[callback] execute failed callback.', token:"+n+"}"),a[n].failCallback(i)))):void c("not support breeze")},b.fire=function(n){if(c("event:"+JSON.stringify(n)),n.code in d)for(var e=d[code],i=0;i<e.length;i++)e[i](n)},b.addEventListener=function(n,e){n in d?d[n].push(e):d[n]=new Array(e)},b.removeEventListener=function(n,e){if(n in d)for(var i=d[n],t=0;t<i.length;t++)if(i[t]===e){this.splice(t,1);break}},e.Breeze=b}(window,window.lib||(window.lib={}));